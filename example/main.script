local app_consts = require("example.app.consts")
local app_scenemanager = require("example.app.scenemanager")
local app_window = require("example.app.window")
local druid = require("druid.druid")

go.property("first_scene", hash("ysdkinit"))

local function error_catching_init()
    local is_release_build = not sys.get_engine_info().is_debug
    if html5 and is_release_build then
        sys.set_error_handler(function(source, message, traceback)
            source = source:gsub("'", "\\'"):gsub("\n", "\\n"):gsub("\r", "\\r")
            message = message:gsub("'", "\\'"):gsub("\n", "\\n"):gsub("\r", "\\r")
            traceback = traceback:gsub("'", "\\'"):gsub("\n", "\\n"):gsub("\r", "\\r")

            local pstatus, perr = pcall(html5.run, "console.warn('ERROR: (" .. source .. ")\\n" .. message .. "\\n" .. traceback .. "')")
            if not pstatus then
                print("FATAL: html5.run(..) failed: " .. perr)
            end
        end)
    end
end

local function print_engine_info()
    local is_release_build = not sys.get_engine_info().is_debug
    if html5 and is_release_build then
        html5.run("console.log('Defold Engine " .. sys.get_engine_info().version .. "')")
    end
end

function init(self)
    error_catching_init()
    print_engine_info()

    msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
    msg.post(".", "acquire_input_focus")

    druid.set_default_style({})

    app_window.resize()

    app_scenemanager.receiver = msg.url("#")
    app_scenemanager.transition = msg.url("#transition")
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
    if message_id == hash("init_seq_complete") then
        app_scenemanager.load_scene(self.first_scene)
    elseif message_id == hash("proxy_loaded") then
        app_scenemanager._proxy_loaded()
    elseif message_id == hash("proxy_unloaded") then
        app_scenemanager._proxy_unloaded()
    elseif message_id == hash("_load_scene") then
        app_scenemanager._load_scene()
    elseif message_id == hash("transition_fade_in_complete") then
        app_scenemanager._transition_fade_in_complete()
    elseif message_id == hash("transition_fade_out_complete") then
        app_scenemanager._transition_fade_out_complete()
    end
end
